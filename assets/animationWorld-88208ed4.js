var s=Object.defineProperty;var n=(a,t,e)=>t in a?s(a,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[t]=e;var r=(a,t,e)=>(n(a,typeof t!="symbol"?t+"":t,e),e);import{c as o}from"./light-b9170a66.js";import{W as c,b as d,f as m,r as h}from"./world-8aeda606.js";import{a5 as l,C as u,M as b}from"./three.module-3e64dab6.js";import"./three-b6bfeeee.js";const p=new u;class x extends c{constructor(e){super(e);r(this,"animationFrame")}appendRender(e){this.renderer=d(e.clientWidth,e.clientHeight),e.append(this.renderer.domElement)}addProject(){var i;const e=o();this.cube=m({material:"MeshStandardMaterial",color:"rgb(20,255,255)",cubeRotate:new l(1,1,10)}),this.cube.updateMatrix(),(i=this.scene)==null||i.add(e,this.cube)}animate(){const e=p.getDelta(),i=b.degToRad(30)*e;this.cube&&(this.cube.rotation.x+=i,this.cube.rotation.y+=i,this.cube.rotation.z+=i)}stop(){if(this.animationFrame)cancelAnimationFrame(this.animationFrame);else return}render(e){if(h(this,e),this.animate(),e.getBoundingClientRect().width>0)this.animationFrame=requestAnimationFrame(this.render.bind(this,e));else return}}export{x as a};
