import{m as p}from"./ml5.min-a6c0a32a.js";import{u}from"./useP5-e34c7c49.js";import{a as g}from"./type-6f687416.js";import{d as _,o as v,c as E,a as w}from"./index-27e8f055.js";import"./p5-1003a71f.js";const x={class:"view"},N=_({__name:"simpleRegression",setup(T){const{container:d}=u((o,i)=>{g(i,"container");const f={task:"regression",debug:!0};let e,r=0;o.setup=()=>{o.createCanvas(i.clientWidth,i.clientHeight),e=p.neuralNetwork(f),m(),e.normalizeData(),console.log(e);const n={batchSize:24,epochs:10};e.train(n,c,()=>{console.log("finished")})};function c(){r<o.width&&e.predict([r],(n,a)=>{if(n){console.log(n);return}console.log(a[0]);const s=a[0],l=r,t=s.value;o.fill(255,0,0),o.rectMode(o.CENTER),o.rect(l,t,10,10),r+=1,c()})}function m(){for(let n=0;n<o.width;n+=10){const a=o.floor(o.random(5,20)),s=50;for(let l=0;l<a;l+=1){const t=[n,o.height-n+o.floor(o.random(-s,s))];o.fill(0,0,255),o.ellipse(t[0],t[1],10,10),e.addData([t[0]],[t[1]])}}}},{banResize:!0});return(o,i)=>(v(),E("div",x,[w("div",{class:"container",ref_key:"container",ref:d},null,512)]))}});export{N as default};
